allRS_poly_genPC1_2.txt
library(raster)
library(FactoMineR)
library(factoextra)
library(corrplot)
setwd("/Users/maryamnouri-aiin/Desktop/Ecological-Genomics/Pop genomics/results/")
bio <- getData("worldclim",var="bio",res=10)
coords <- read.csv("https://www.uvm.edu/~kellrlab/forClass/colebrookSampleMetaData.csv", header=T)
names <- read.table("allRS_bam.list")
names <- unlist(strsplit(basename(as.character(names[,1])), split = ".sorted.rmdup.bam"))
split = strsplit(names, "_")
pops <- data.frame(names[1:95], do.call(rbind, split[1:95]))
names(pops) = c("Ind", "Pop", "Row", "Col")
head(pops)
angsd_coords <- merge(pops, coords, by.x="Ind", by.y="Tree")
points <- SpatialPoints(angsd_coords[c("Longitude","Latitude")])
head(angsd_coords)
clim <- extract(bio,points)
angsd_coords_clim <- cbind.data.frame(angsd_coords,clim)
str(angsd_coords_clim)
clim_PCA = PCA(angsd_coords_clim[,15:33], graph=T)
fviz_eig(clim_PCA)
fviz_pca_biplot(clim_PCA,
geom.ind="point",
col.ind = angsd_coords_clim$Latitude,
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
title="Climate PCA (Bioclim)",
legend.title="Latitude")
dimdesc(clim_PCA)[1:2]
write.table(scale(angsd_coords_clim["bio10"]),
"allRS_bio10.txt",
sep="\t",
quote=F,
row.names = F,
col.names=F)
write.table(scale(angsd_coords_clim["bio12"]),
"allRS_bio12.txt",
sep="\t",
quote=F,
row.names = F,
col.names=F)
bio <- getData("worldclim",var="bio",res=10)
coords <- read.csv("https://www.uvm.edu/~kellrlab/forClass/colebrookSampleMetaData.csv", header=T)
names <- read.table("allRS_bam.list")
names <- unlist(strsplit(basename(as.character(names[,1])), split = ".sorted.rmdup.bam"))
split = strsplit(names, "_")
pops <- data.frame(names[1:95], do.call(rbind, split[1:95]))
names(pops) = c("Ind", "Pop", "Row", "Col")
head(pops)
angsd_coords <- merge(pops, coords, by.x="Ind", by.y="Tree")
points <- SpatialPoints(angsd_coords[c("Longitude","Latitude")])
head(angsd_coords)
clim <- extract(bio,points)
angsd_coords_clim <- cbind.data.frame(angsd_coords,clim)
str(angsd_coords_clim)
clim_PCA = PCA(angsd_coords_clim[,15:33], graph=T)
fviz_eig(clim_PCA)
fviz_pca_biplot(clim_PCA,
geom.ind="point",
col.ind = angsd_coords_clim$Latitude,
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
title="Climate PCA (Bioclim)",
legend.title="Latitude")
dimdesc(clim_PCA)[1:2]
write.table(scale(angsd_coords_clim["bio10"]),
"allRS_bio10.txt",
sep="\t",
quote=F,
row.names = F,
col.names=F)
write.table(scale(angsd_coords_clim["bio12"]),
"allRS_bio12.txt",
sep="\t",
quote=F,
row.names = F,
col.names=F)
fviz_eig(clim_PCA)
clim_PCA
write.table(scale(angsd_coords_clim["bio10"]),
"allRS_bio10.txt",
sep="\t",
quote=F,
row.names = F,
col.names=F)
COV
PCA <- eigen(COV)
PCA
data=as.data.frame(PCA$vectors)
data=data[,c(1:2)] # the second number here is the number of PC axes you want to keep
data
write.table(data,
"allRS_poly_genPC1_2.txt",
sep="\t",
quote=F,
row.names=F,
col.names=F)
###########
bio <- getData("worldclim",var="bio",res=10)
bio10 <- bio[["bio10"]]
bio12 <- bio[["bio12"]]
library(raster)
library(FactoMineR)
library(factoextra)
library(corrplot)
library(RcppCNPy) # for reading python numpy (.npy) files
setwd("/Users/maryamnouri-aiin/Desktop/Ecological-Genomics/Pop genomics/results/")
list.files()
s<-npyLoad("allRS_poly.selection.npy")
s
# convert test statistic to p-value
pval <- as.data.frame(1-pchisq(s,1))
names(pval) = c("p_PC1","p_PC2")
## read positions
p <- read.table("allRS_poly_mafs.sites",sep="\t",header=T, stringsAsFactors=T)
dim(p)
p_filtered = p[which(p$kept_sites==1),]
dim(p_filtered)
# get all the outliers with p-values below some cutoff
cutoff=1e-3
outliers_PC1 <- p_filtered[which(pval$p_PC1<cutoff),c("chromo","position")]
outliers_PC1
# how many outlier loci < the cutoff?
dim(outliers_PC1)[1]
# write them out to a file
write.table(outliers_PC1,
"allRS_poly_outliers_PC1.txt",
sep=":",
quote=F,
row.names=F,
col.names=F)
COV <- as.matrix(read.table("allRS_poly.cov"))
PCA <- eigen(COV)
data=as.data.frame(PCA$vectors)
data=data[,c(1:2)] # the second number here is the number of PC axes you want to keep
write.table(data,
"allRS_poly_genPC1_2.txt",
sep="\t",
quote=F,
row.names=F,
col.names=F)
library(raster)
library(FactoMineR)
library(factoextra)
library(corrplot)
setwd("/Users/maryamnouri-aiin/Desktop/Ecological-Genomics/Pop genomics/results/")
bio <- getData("worldclim",var="bio",res=10)
coords <- read.csv("https://www.uvm.edu/~kellrlab/forClass/colebrookSampleMetaData.csv", header=T)
names <- read.table("allRS_bam.list")
names <- unlist(strsplit(basename(as.character(names[,1])), split = ".sorted.rmdup.bam"))
split = strsplit(names, "_")
pops <- data.frame(names[1:95], do.call(rbind, split[1:95]))
names(pops) = c("Ind", "Pop", "Row", "Col")
head(pops)
angsd_coords <- merge(pops, coords, by.x="Ind", by.y="Tree")
points <- SpatialPoints(angsd_coords[c("Longitude","Latitude")])
head(angsd_coords)
clim <- extract(bio,points)
angsd_coords_clim <- cbind.data.frame(angsd_coords,clim)
str(angsd_coords_clim)
angsd_coords_clim
clim_PCA = PCA(angsd_coords_clim[,15:33], graph=T)
clim_PCA
fviz_eig(clim_PCA)
print(fviz_eig(clim_PCA))
View(fviz_eig(clim_PCA)
view(fviz_eig(clim_PCA)
view(fviz_eig(clim_PCA))
fviz_pca_biplot(clim_PCA,
geom.ind="point",
col.ind = angsd_coords_clim$Latitude,
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
title="Climate PCA (Bioclim)",
legend.title="Latitude")
gg<- fviz_pca_biplot(clim_PCA,
geom.ind="point",
col.ind = angsd_coords_clim$Latitude,
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
title="Climate PCA (Bioclim)",
legend.title="Latitude")
gg
dimdesc(clim_PCA)[1:2]
write.table(scale(angsd_coords_clim["Precipitation"]),
"allRS_bio12.txt",
sep="\t",
quote=F,
row.names = F,
col.names=F)
library(RcppCNPy) # for reading python numpy (.npy) files
setwd("/Users/maryamnouri-aiin/Desktop/Ecological-Genomics/Pop genomics/homeworks/")
list.files()
s<-npyLoad("allRS_poly.selection.npy")
#number of loci
#the cols are the e number, we chose to do 2
head(s)
dim(s)
# convert test statistic to p-value
pval <- as.data.frame(1-pchisq(s,1))
# head for pvalue
head(pval)
dim(pval)
# different from class note, we added one more col/PC
names(pval) = c("p_PC1","p_PC2")
## read positions
p <- read.table("allRS_poly_mafs.sites",sep="\t",header=T, stringsAsFactors=T)
head(p)
#filter data frame by selecting rows that has 1
p_filtered = p[which(p$kept_sites==1)]
dim(p_filtered)
head(p_filtered)
# How many sites got filtered out when testing for selection? Why?
tiff('selection', units="in", width=12, height=8, res=300)
## make manhattan plot
plot(-log10(pval$p_PC1),
col=p_filtered$chromo,
xlab="Position",
ylab="-log10(p-value)",
main="Selection outliers: pcANGSD e=2 (K3)")
dev.off()
# We can zoom in if there's something interesting near a position...
tiff('selection zoomed PC1', units="in", width=12, height=8, res=300)
plot(-log10(pval$p_PC1[2e05:2.01e05]),
col=p_filtered$chromo,
xlab="Position",
ylab="-log10(p-value)",
main="Selection outliers: pcANGSD e=2 (K3)")
dev.off()
# get the contig with the lowest p-value for selection
sel_contig <- p_filtered[which(pval==min(pval$p_PC1)),c("chromo","position")]
sel_contig
# get all the outliers with p-values below some cutoff
cutoff=1e-4   # equals a 1 in 5,000 probability
outlier_contig <- p_filtered[which(pval$p_PC1<cutoff),c("chromo","position")]
outlier_contig
outlier_contig[2000-2500, 1:2]
dim(outlier_contig[which(outlier_contig$position>0),])
outlier_contig <-(outlier_contig[which(outlier_contig$position>0),])
dim(outlier_contig)
# how many unique contigs harbor outlier loci?
length(unique(outlier_contig$chromo))
write.table(unique(outlier_contig$chromo),
"allRS_poly_PC1_outlier_contig.txt",
sep="\t",
quote=F,
row.names=F,
col.names=F)
# how many outlier loci < the cutoff?
dim(outlier_contig)[1]
# How many sites got filtered out when testing for selection? Why?
tiff('selection PC2', units="in", width=12, height=8, res=300)
## make manhattan plot
plot(-log10(pval$p_PC2),
col=p_filtered$chromo,
xlab="Position",
ylab="-log10(p-value)",
main="Selection outliers: pcANGSD e=2 (K3)")
dev.off()
# We can zoom in if there's something interesting near a position...
tiff('selection zoomed PC2', units="in", width=12, height=8, res=300)
plot(-log10(pval$p_PC2[2e05:2.01e05]),
col=p_filtered$chromo,
xlab="Position",
ylab="-log10(p-value)",
main="Selection outliers: pcANGSD e=2 (K3)")
dev.off()
# get the contig with the lowest p-value for selection
sel_contig <- p_filtered[which(pval==min(pval$p_PC2)),c("chromo","position")]
sel_contig
# get all the outliers with p-values below some cutoff
cutoff=1e-4   # equals a 1 in 5,000 probability
outlier_contig <- p_filtered[which(pval$p_PC2<cutoff),c("chromo","position")]
outlier_contig
outlier_contig[2000-2500, 1:2]
dim(outlier_contig[which(outlier_contig$position>0),])
outlier_contig <-(outlier_contig[which(outlier_contig$position>0),])
dim(outlier_contig)
# how many unique contigs harbor outlier loci?
length(unique(outlier_contig$chromo))
write.table(unique(outlier_contig$chromo),
"allRS_poly_PC2_outlier_contig.txt",
sep="\t",
quote=F,
row.names=F,
col.names=F)
# get the contig with the lowest p-value for selection
sel_contig <- p_filtered[which(pval==min(pval$p_PC1)),c("chromo","position")]
sel_contig
# get all the outliers with p-values below some cutoff
cutoff=1e-4   # equals a 1 in 5,000 probability
outlier_contig <- p_filtered[which(pval$p_PC2<cutoff),c("chromo","position")]
outlier_contig
outlier_contig[2000-2500, 1:2]
dim(outlier_contig[which(outlier_contig$position>0),])
outlier_contig <-(outlier_contig[which(outlier_contig$position>0),])
dim(outlier_contig)
# how many unique contigs harbor outlier loci?
length(unique(outlier_contig$chromo))
write.table(unique(outlier_contig$chromo),
"allRS_poly_PC2_outlier_contig.txt",
sep="\t",
quote=F,
row.names=F,
col.names=F)
write.table(unique(outlier_contig$chromo),
"allRS_poly_PC1_outlier_contig.txt",
sep="\t",
quote=F,
row.names=F,
col.names=F)
# how many outlier loci < the cutoff?
dim(outlier_contig)[1]
write.table(scale(angsd_coords_clim["bio10"]),
"allRS_bio10.txt",
sep="\t",
quote=F,
row.names = F,
col.names=F)
tabledata <- read.table("allRS_bio10.txt", sep="\t", header=FALSE)
write.table(scale(angsd_coords_clim["bio11"]),
"allRS_bio12.txt",
sep="\t",
quote=F,
row.names = F,
col.names=F)
tabledata <- read.table("allRS_bio12.txt", sep="\t", header=FALSE)
write.table(scale(angsd_coords_clim["bio11"]),
"allRS_bio12.txt",
sep="\t",
quote=F,
row.names = F,
col.names=F)
tabledata <- read.table("allRS_bio11.txt", sep="\t", header=FALSE)
library(raster)
library(FactoMineR)
library(factoextra)
library(corrplot)
library(data.table)
library(gear)
library(RcppCNPy) # for reading python numpy (.npy) files
setwd("/Users/maryamnouri-aiin/Desktop/Ecological-Genomics/Pop genomics/results/")
list.files()
s<-npyLoad("allRS_poly.selection.npy")
# convert test statistic to p-value
pval <- as.data.frame(1-pchisq(s,1))
names(pval) = c("p_PC1","p_PC2")
## read positions
p <- read.table("allRS_poly_mafs.sites",sep="\t",header=T, stringsAsFactors=T)
dim(p)
p_filtered = p[which(p$kept_sites==1),]
dim(p_filtered)
# get all the outliers with p-values below some cutoff
cutoff=1e-3
outliers_PC1 <- p_filtered[which(pval$p_PC1<cutoff),c("chromo","position")]
# how many outlier loci < the cutoff?
dim(outliers_PC1)[1]
# write them out to a file
write.table(outliers_PC1,
"allRS_poly_outliers_PC1.txt",
sep=":",
quote=F,
row.names=F,
col.names=F)
COV <- as.matrix(read.table("allRS_poly.cov"))
PCA <- eigen(COV)
data=as.data.frame(PCA$vectors)
data=data[,c(1:2)] # the second number here is the number of PC axes you want to keep
write.table(data,
"allRS_poly_genPC1_2.txt",
sep="\t",
quote=F,
row.names=F,
col.names=F)
library(raster)
library(FactoMineR)
library(factoextra)
library(corrplot)
setwd("/Users/maryamnouri-aiin/Desktop/Ecological-Genomics/Pop genomics/results/")
bio <- getData("worldclim",var="bio",res=10)
###########
bio <- getData("worldclim",var="bio",res=10)
bio10 <- bio[["bio10"]]
bio12 <- bio[["bio12"]]
coords <- read.csv("https://www.uvm.edu/~kellrlab/forClass/colebrookSampleMetaData.csv", header=T)
names <- read.table("allRS_bam.list")
names <- unlist(strsplit(basename(as.character(names[,1])), split = ".sorted.rmdup.bam"))
split = strsplit(names, "_")
pops <- data.frame(names[1:95], do.call(rbind, split[1:95]))
names(pops) = c("Ind", "Pop", "Row", "Col")
head(pops)
angsd_coords <- merge(pops, coords, by.x="Ind", by.y="Tree")
points <- SpatialPoints(angsd_coords[c("Longitude","Latitude")])
head(angsd_coords)
head(points)
Temperature <- extract(bio10,points)
Precipitation <- extract(bio12, points)
angsd_coords_clim <- cbind.data.frame(angsd_coords,Precipitation)
str(angsd_coords_clim)
clim_PCA = PCA(angsd_coords_clim[,15:12], graph=T)
fviz_eig(clim_PCA)
tiff('temp and prec', units="in", width=12, height=8, res=300)
# What is the climate PCA space our red spruce pops occupy?
fviz_pca_biplot(clim_PCA,
geom.ind="point",
col.ind = angsd_coords_clim$Latitude,
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
title="Climate PCA (Bioclim)",
legend.title="Latitude")
dev.off()
dimdesc(clim_PCA)[1:2]
write.table(scale(angsd_coords_clim["bio10"]),
"allRS_bio10.txt",
sep="\t",
quote=F,
row.names = F,
col.names=F)
tabledata <- read.table("allRS_bio10.txt", sep="\t", header=FALSE)
write.table(scale(angsd_coords_clim["bio11"]),
"allRS_bio12.txt",
sep="\t",
quote=F,
row.names = F,
col.names=F)
tabledata <- read.table("allRS_bio11.txt", sep="\t", header=FALSE)
write.table(scale(angsd_coords_clim["bio10"]),
"allRS_bio10.txt",
sep="\t",
quote=F,
row.names = F,
col.names=F)
write.table(scale(angsd_coords_clim["bio10"]),
"allRS_bio10.txt",
sep="\t",
quote=F,
row.names = F,
col.names=F)
library(raster)
library(FactoMineR)
library(factoextra)
library(corrplot)
library(RcppCNPy) # for reading python numpy (.npy) files
setwd("/Users/maryamnouri-aiin/Desktop/Ecological-Genomics/Pop genomics/results/")
list.files()
s<-npyLoad("allRS_poly.selection.npy")
# convert test statistic to p-value
pval <- as.data.frame(1-pchisq(s,1))
names(pval) = c("p_PC1","p_PC2")
## read positions
p <- read.table("allRS_poly_mafs.sites",sep="\t",header=T, stringsAsFactors=T)
dim(p)
p_filtered = p[which(p$kept_sites==1),]
dim(p_filtered)
# get all the outliers with p-values below some cutoff
cutoff=1e-3
outliers_PC1 <- p_filtered[which(pval$p_PC1<cutoff),c("chromo","position")]
# how many outlier loci < the cutoff?
dim(outliers_PC1)[1]
# write them out to a file
write.table(outliers_PC1,
"allRS_poly_outliers_PC1.txt",
sep=":",
quote=F,
row.names=F,
col.names=F)
COV <- as.matrix(read.table("allRS_poly.cov"))
PCA <- eigen(COV)
data=as.data.frame(PCA$vectors)
data=data[,c(1:2)] # the second number here is the number of PC axes you want to keep
write.table(data,
"allRS_poly_genPC1_2.txt",
sep="\t",
quote=F,
row.names=F,
col.names=F)
library(raster)
library(FactoMineR)
library(factoextra)
library(corrplot)
setwd("/Users/maryamnouri-aiin/Desktop/Ecological-Genomics/Pop genomics/results/")
bio <- getData("worldclim",var="bio",res=10)
coords <- read.csv("https://www.uvm.edu/~kellrlab/forClass/colebrookSampleMetaData.csv", header=T)
names <- read.table("allRS_bam.list")
names <- unlist(strsplit(basename(as.character(names[,1])), split = ".sorted.rmdup.bam"))
split = strsplit(names, "_")
pops <- data.frame(names[1:95], do.call(rbind, split[1:95]))
names(pops) = c("Ind", "Pop", "Row", "Col")
head(pops)
angsd_coords <- merge(pops, coords, by.x="Ind", by.y="Tree")
points <- SpatialPoints(angsd_coords[c("Longitude","Latitude")])
head(angsd_coords)
clim <- extract(bio,points)
angsd_coords_clim <- cbind.data.frame(angsd_coords,clim)
str(angsd_coords_clim)
clim_PCA = PCA(angsd_coords_clim[,15:33], graph=T)
fviz_eig(clim_PCA)
gg<- fviz_pca_biplot(clim_PCA,
geom.ind="point",
col.ind = angsd_coords_clim$Latitude,
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
title="Climate PCA (Bioclim)",
legend.title="Latitude")
dimdesc(clim_PCA)[1:2]
write.table(scale(angsd_coords_clim["bio10"]),
"allRS_bio10.txt",
sep="\t",
quote=F,
row.names = F,
col.names=F)
write.table(scale(angsd_coords_clim["bio12"]),
"allRS_bio12.txt",
sep="\t",
quote=F,
row.names = F,
col.names=F)
